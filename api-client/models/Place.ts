/* tslint:disable */
/* eslint-disable */
/**
 * WebApplication1
 * No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)
 *
 * The version of the OpenAPI document: 1.0
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

import { mapValues } from '../runtime';
import type { PlaceLocation } from './PlaceLocation';
import {
    PlaceLocationFromJSON,
    PlaceLocationFromJSONTyped,
    PlaceLocationToJSON,
} from './PlaceLocation';

/**
 * 
 * @export
 * @interface Place
 */
export interface Place {
    /**
     * 
     * @type {string}
     * @memberof Place
     */
    id?: string | null;
    /**
     * 
     * @type {string}
     * @memberof Place
     */
    title: string;
    /**
     * 
     * @type {string}
     * @memberof Place
     */
    description?: string | null;
    /**
     * 
     * @type {PlaceLocation}
     * @memberof Place
     */
    placeLocation?: PlaceLocation;
    /**
     * 
     * @type {string}
     * @memberof Place
     */
    address: string;
    /**
     * 
     * @type {string}
     * @memberof Place
     */
    creator?: string | null;
    /**
     * 
     * @type {string}
     * @memberof Place
     */
    imageUrl?: string | null;
}

/**
 * Check if a given object implements the Place interface.
 */
export function instanceOfPlace(value: object): value is Place {
    if (!('title' in value) || value['title'] === undefined) return false;
    if (!('address' in value) || value['address'] === undefined) return false;
    return true;
}

export function PlaceFromJSON(json: any): Place {
    return PlaceFromJSONTyped(json, false);
}

export function PlaceFromJSONTyped(json: any, ignoreDiscriminator: boolean): Place {
    if (json == null) {
        return json;
    }
    return {
        
        'id': json['id'] == null ? undefined : json['id'],
        'title': json['title'],
        'description': json['description'] == null ? undefined : json['description'],
        'placeLocation': json['placeLocation'] == null ? undefined : PlaceLocationFromJSON(json['placeLocation']),
        'address': json['address'],
        'creator': json['creator'] == null ? undefined : json['creator'],
        'imageUrl': json['imageUrl'] == null ? undefined : json['imageUrl'],
    };
}

export function PlaceToJSON(value?: Place | null): any {
    if (value == null) {
        return value;
    }
    return {
        
        'id': value['id'],
        'title': value['title'],
        'description': value['description'],
        'placeLocation': PlaceLocationToJSON(value['placeLocation']),
        'address': value['address'],
        'creator': value['creator'],
        'imageUrl': value['imageUrl'],
    };
}

